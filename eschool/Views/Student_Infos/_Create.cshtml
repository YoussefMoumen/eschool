@model eschool.Student_Infos

<div id="divCreate">
    <div class="modal-content" style="margin-left: 140px;width:1000px;">
        <div class="modal-header">

            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                ×
            </button>
            <h4 class="modal-title" id="myModalLabel">
                Create Student Information
            </h4>
        </div>
        <div class="modal-body">

            @*@using (Html.BeginForm())
                {*@
            @using (Ajax.BeginForm("_Create", "Student_Infos", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divCreate" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row" style="padding-left:30px; margin-bottom:20px;">
                        @Html.LabelFor(model => model.Student_Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Student_Fname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student_Fname, "", new { @class = "text-danger" })
                        </div>


                        @Html.LabelFor(model => model.Student_Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Student_Lname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student_Lname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="padding-left:30px; margin-bottom:20px;">
                        @Html.LabelFor(model => model.Student_Age, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Student_Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student_Age, "", new { @class = "text-danger" })
                        </div>
                        

                        <label class="control-label col-md-2">Filiere</label>
                        <div class="col-md-4">
                            @Html.DropDownList("Filiere", ViewBag.Student_Filiere_Id as SelectList, "-- Select Filiere --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Student_Filiere_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="padding-left:30px; margin-bottom:20px;">

                        <label class="control-label col-md-2">Classe</label>
                        <div class="col-md-4">
                            @Html.DropDownList("Classe", ViewBag.Student_Classe_Id as SelectList, "-- Select Classe --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Student_Classe_Id, "", new { @class = "text-danger" })
                        </div>



                        @Html.LabelFor(model => model.Student_Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Student_Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student_Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="padding-left:30px; margin-bottom:20px;">
                        @Html.LabelFor(model => model.Student_Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Student_Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student_Email, "", new { @class = "text-danger" })
                        </div>



                        @Html.LabelFor(model => model.Student_Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <input type="file" />
                            @Html.ValidationMessageFor(model => model.Student_Photo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                    <input id="submitButton" type="submit" value="Save changes" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
</div>
  
@if (ViewBag.Message == "success")
{
    <script type="text/javascript">
        Command: toastr["success"](" ", "Succefully Added ")
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": false,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (ViewBag.Message == "error")
{
    <script type="text/javascript">
        Command: toastr["error"](" ", "Error Insertion !!")
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": false,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
